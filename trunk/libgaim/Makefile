# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 435799 $ 
# libgaim/Makefile.  Generated from Makefile.in by config.pl.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..
VPATH = .
prefix = /usr/kde/3.5
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib64
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/koopa
pkglibdir = $(libdir)/koopa
pkgincludedir = $(includedir)/koopa
top_builddir = ..

ACLOCAL = ${SHELL} /home/flame/devel/repos/koopa/admin/missing --run aclocal-1.6
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTOMAKE = ${SHELL} /home/flame/devel/repos/koopa/admin/missing --run automake-1.6
AUTOHEADER = ${SHELL} /home/flame/devel/repos/koopa/admin/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = x86_64-unknown-linux-gnu
host_alias = 
host_triplet = x86_64-unknown-linux-gnu
target_alias = 
target_triplet = x86_64-unknown-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /home/flame/devel/repos/koopa/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/kde/3.5/bin/artsc-config
AS = @AS@
AUTODIRS = 
AWK = gawk
CC = gcc
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in
CPP = gcc -E
CXX = g++
CXXCPP = g++ -E
DCOPIDL = /usr/kde/3.5/bin/dcopidl
DCOPIDL2CPP = /usr/kde/3.5/bin/dcopidl2cpp
DCOPIDLNG = /usr/kde/3.5/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = echo
EGREP = grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXR_FLAGS = @EXR_FLAGS@
F77 = 
FRAMEWORK_COREAUDIO = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  
GLIB_LIBS = -lglib-2.0  
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/gmsgfmt
HAVE_GCC_VISIBILITY = 0
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/kde/3.5/bin/kconfig_compiler
KDECONFIG = /usr/kde/3.5/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = -I/usr/kde/3.5/include
KDE_LDFLAGS = -L/usr/kde/3.5/lib64
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fpie
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/kde/3.5/share/apps/ksgmltools2/customization/kde-chunk.xsl
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = @LIBGEN@
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = -lresolv
LIBSHADOW = @LIBSHADOW@
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_EXR = @LIB_EXR@
LIB_JASPER = @LIB_JASPER@
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
MAKEKDEWIDGETS = 
MCOPIDL = /usr/kde/3.5/bin/mcopidl
MEINPROC = /usr/kde/3.5/bin/meinproc
MOC = /usr/qt/3/bin/moc
MSGFMT = /usr/bin/gmsgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
PACKAGE = koopa
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = 
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = -I/usr/qt/3/include
QT_LDFLAGS = -L/usr/qt/3/lib64
RANLIB = ranlib
RC = @RC@
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = strip
TOPSUBDIRS =  doc libgaim po src
UIC = /usr/qt/3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 0.1
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMLLINT = /usr/bin/xmllint
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = 
X_INCLUDES = -I.
X_LDFLAGS = -L/usr/lib64
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
all_includes = -I/usr/kde/3.5/include -I/usr/qt/3/include -I. 
all_libraries = -L/usr/kde/3.5/lib64 -L/usr/qt/3/lib64 -L/usr/lib64   
am__include = include
am__quote = 
install_sh = /home/flame/devel/repos/koopa/admin/install-sh
jni_includes = @jni_includes@
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/kde/3.5/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/kde/3.5/lib64
kde_libs_htmldir = /usr/kde/3.5/share/doc/HTML
kde_libs_prefix = /usr/kde/3.5
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/kde/3.5/lib64/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
qt_includes = /usr/qt/3/include
qt_libraries = /usr/qt/3/lib64
x_includes = .
x_libraries = /usr/lib64
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
gaim_coresources = \
	account.c \
	accountopt.c \
	blist.c \
	buddyicon.c \
	cmds.c \
	connection.c \
	conversation.c \
	core.c \
	debug.c \
	eventloop.c \
	ft.c \
	imgstore.c \
	log.c \
	md5.c \
	network.c \
	notify.c \
	plugin.c \
	pluginpref.c \
	pounce.c \
	prefix.c \
	prefs.c \
	privacy.c \
	proxy.c \
	prpl.c \
	request.c \
	roomlist.c \
	server.c \
	sha.c \
	signals.c \
	status.c \
	stringref.c \
	sound.c \
	sslconn.c \
	util.c \
	value.c \
	xmlnode.c


gaim_coreheaders = \
	account.h \
	accountopt.h \
	away.h \
	blist.h \
	buddyicon.h \
	cmds.h \
	connection.h \
	conversation.h \
	core.h \
	debug.h \
	eventloop.h \
	ft.h \
	imgstore.h \
	internal.h \
	log.h \
	md5.h \
	network.h \
	notify.h \
	plugin.h \
	pluginpref.h \
	pounce.h \
	prefix.h \
	prefs.h \
	privacy.h \
	proxy.h \
	prpl.h \
	request.h \
	roomlist.h \
	server.h \
	sha.h \
	signals.h \
	status.h \
	stringref.h \
	sound.h \
	sslconn.h \
	util.h \
	value.h \
	version.h \
	xmlnode.h


noinst_LTLIBRARIES = libgaim.la
noinst_HEADERS = $(gaim_coreheaders)

libgaim_la_SOURCES = $(gaim_coresources)
libgaim_la_CFLAGS = $(GLIB_CFLAGS)
libgaim_la_LIBS = $(GLIB_LIBS)
subdir = libgaim
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libgaim_la_LDFLAGS =
libgaim_la_LIBADD =
am__objects_1 = libgaim_la-account.lo libgaim_la-accountopt.lo \
	libgaim_la-blist.lo libgaim_la-buddyicon.lo libgaim_la-cmds.lo \
	libgaim_la-connection.lo libgaim_la-conversation.lo \
	libgaim_la-core.lo libgaim_la-debug.lo libgaim_la-eventloop.lo \
	libgaim_la-ft.lo libgaim_la-imgstore.lo libgaim_la-log.lo \
	libgaim_la-md5.lo libgaim_la-network.lo libgaim_la-notify.lo \
	libgaim_la-plugin.lo libgaim_la-pluginpref.lo \
	libgaim_la-pounce.lo libgaim_la-prefix.lo libgaim_la-prefs.lo \
	libgaim_la-privacy.lo libgaim_la-proxy.lo libgaim_la-prpl.lo \
	libgaim_la-request.lo libgaim_la-roomlist.lo \
	libgaim_la-server.lo libgaim_la-sha.lo libgaim_la-signals.lo \
	libgaim_la-status.lo libgaim_la-stringref.lo \
	libgaim_la-sound.lo libgaim_la-sslconn.lo libgaim_la-util.lo \
	libgaim_la-value.lo libgaim_la-xmlnode.lo
am_libgaim_la_OBJECTS = $(am__objects_1)
#>- libgaim_la_OBJECTS = $(am_libgaim_la_OBJECTS)
#>+ 1
libgaim_la_OBJECTS = $(am__objects_1)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- DEP_FILES = ./$(DEPDIR)/libgaim_la-account.Plo \
#>- 	./$(DEPDIR)/libgaim_la-accountopt.Plo \
#>- 	./$(DEPDIR)/libgaim_la-blist.Plo \
#>- 	./$(DEPDIR)/libgaim_la-buddyicon.Plo \
#>- 	./$(DEPDIR)/libgaim_la-cmds.Plo \
#>- 	./$(DEPDIR)/libgaim_la-connection.Plo \
#>- 	./$(DEPDIR)/libgaim_la-conversation.Plo \
#>- 	./$(DEPDIR)/libgaim_la-core.Plo \
#>- 	./$(DEPDIR)/libgaim_la-debug.Plo \
#>- 	./$(DEPDIR)/libgaim_la-eventloop.Plo \
#>- 	./$(DEPDIR)/libgaim_la-ft.Plo \
#>- 	./$(DEPDIR)/libgaim_la-imgstore.Plo \
#>- 	./$(DEPDIR)/libgaim_la-log.Plo \
#>- 	./$(DEPDIR)/libgaim_la-md5.Plo \
#>- 	./$(DEPDIR)/libgaim_la-network.Plo \
#>- 	./$(DEPDIR)/libgaim_la-notify.Plo \
#>- 	./$(DEPDIR)/libgaim_la-plugin.Plo \
#>- 	./$(DEPDIR)/libgaim_la-pluginpref.Plo \
#>- 	./$(DEPDIR)/libgaim_la-pounce.Plo \
#>- 	./$(DEPDIR)/libgaim_la-prefix.Plo \
#>- 	./$(DEPDIR)/libgaim_la-prefs.Plo \
#>- 	./$(DEPDIR)/libgaim_la-privacy.Plo \
#>- 	./$(DEPDIR)/libgaim_la-proxy.Plo \
#>- 	./$(DEPDIR)/libgaim_la-prpl.Plo \
#>- 	./$(DEPDIR)/libgaim_la-request.Plo \
#>- 	./$(DEPDIR)/libgaim_la-roomlist.Plo \
#>- 	./$(DEPDIR)/libgaim_la-server.Plo \
#>- 	./$(DEPDIR)/libgaim_la-sha.Plo \
#>- 	./$(DEPDIR)/libgaim_la-signals.Plo \
#>- 	./$(DEPDIR)/libgaim_la-sound.Plo \
#>- 	./$(DEPDIR)/libgaim_la-sslconn.Plo \
#>- 	./$(DEPDIR)/libgaim_la-status.Plo \
#>- 	./$(DEPDIR)/libgaim_la-stringref.Plo \
#>- 	./$(DEPDIR)/libgaim_la-util.Plo \
#>- 	./$(DEPDIR)/libgaim_la-value.Plo \
#>- 	./$(DEPDIR)/libgaim_la-xmlnode.Plo
#>+ 36
DEP_FILES =  ./$(DEPDIR)/libgaim_la-account.Plo \
		./$(DEPDIR)/libgaim_la-accountopt.Plo \
		./$(DEPDIR)/libgaim_la-blist.Plo \
		./$(DEPDIR)/libgaim_la-buddyicon.Plo \
		./$(DEPDIR)/libgaim_la-cmds.Plo \
		./$(DEPDIR)/libgaim_la-connection.Plo \
		./$(DEPDIR)/libgaim_la-conversation.Plo \
		./$(DEPDIR)/libgaim_la-core.Plo \
		./$(DEPDIR)/libgaim_la-debug.Plo \
		./$(DEPDIR)/libgaim_la-eventloop.Plo \
		./$(DEPDIR)/libgaim_la-ft.Plo \
		./$(DEPDIR)/libgaim_la-imgstore.Plo \
		./$(DEPDIR)/libgaim_la-log.Plo \
		./$(DEPDIR)/libgaim_la-md5.Plo \
		./$(DEPDIR)/libgaim_la-network.Plo \
		./$(DEPDIR)/libgaim_la-notify.Plo \
		./$(DEPDIR)/libgaim_la-plugin.Plo \
		./$(DEPDIR)/libgaim_la-pluginpref.Plo \
		./$(DEPDIR)/libgaim_la-pounce.Plo \
		./$(DEPDIR)/libgaim_la-prefix.Plo \
		./$(DEPDIR)/libgaim_la-prefs.Plo \
		./$(DEPDIR)/libgaim_la-privacy.Plo \
		./$(DEPDIR)/libgaim_la-proxy.Plo \
		./$(DEPDIR)/libgaim_la-prpl.Plo \
		./$(DEPDIR)/libgaim_la-request.Plo \
		./$(DEPDIR)/libgaim_la-roomlist.Plo \
		./$(DEPDIR)/libgaim_la-server.Plo \
		./$(DEPDIR)/libgaim_la-sha.Plo \
		./$(DEPDIR)/libgaim_la-signals.Plo \
		./$(DEPDIR)/libgaim_la-sound.Plo \
		./$(DEPDIR)/libgaim_la-sslconn.Plo \
		./$(DEPDIR)/libgaim_la-status.Plo \
		./$(DEPDIR)/libgaim_la-stringref.Plo \
		./$(DEPDIR)/libgaim_la-util.Plo \
		./$(DEPDIR)/libgaim_la-value.Plo \
		./$(DEPDIR)/libgaim_la-xmlnode.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -O2   -Wformat-security -Wmissing-format-attribute
DIST_SOURCES = $(libgaim_la_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libgaim_la_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  libgaim/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libgaim/Makefile
	cd $(top_srcdir) && perl admin/am_edit libgaim/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgaim_la-account.lo: account.c
libgaim_la-accountopt.lo: accountopt.c
libgaim_la-blist.lo: blist.c
libgaim_la-buddyicon.lo: buddyicon.c
libgaim_la-cmds.lo: cmds.c
libgaim_la-connection.lo: connection.c
libgaim_la-conversation.lo: conversation.c
libgaim_la-core.lo: core.c
libgaim_la-debug.lo: debug.c
libgaim_la-eventloop.lo: eventloop.c
libgaim_la-ft.lo: ft.c
libgaim_la-imgstore.lo: imgstore.c
libgaim_la-log.lo: log.c
libgaim_la-md5.lo: md5.c
libgaim_la-network.lo: network.c
libgaim_la-notify.lo: notify.c
libgaim_la-plugin.lo: plugin.c
libgaim_la-pluginpref.lo: pluginpref.c
libgaim_la-pounce.lo: pounce.c
libgaim_la-prefix.lo: prefix.c
libgaim_la-prefs.lo: prefs.c
libgaim_la-privacy.lo: privacy.c
libgaim_la-proxy.lo: proxy.c
libgaim_la-prpl.lo: prpl.c
libgaim_la-request.lo: request.c
libgaim_la-roomlist.lo: roomlist.c
libgaim_la-server.lo: server.c
libgaim_la-sha.lo: sha.c
libgaim_la-signals.lo: signals.c
libgaim_la-status.lo: status.c
libgaim_la-stringref.lo: stringref.c
libgaim_la-sound.lo: sound.c
libgaim_la-sslconn.lo: sslconn.c
libgaim_la-util.lo: util.c
libgaim_la-value.lo: value.c
libgaim_la-xmlnode.lo: xmlnode.c
libgaim.la: $(libgaim_la_OBJECTS) $(libgaim_la_DEPENDENCIES) 
	$(LINK)  $(libgaim_la_LDFLAGS) $(libgaim_la_OBJECTS) $(libgaim_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libgaim_la-account.Plo
include ./$(DEPDIR)/libgaim_la-accountopt.Plo
include ./$(DEPDIR)/libgaim_la-blist.Plo
include ./$(DEPDIR)/libgaim_la-buddyicon.Plo
include ./$(DEPDIR)/libgaim_la-cmds.Plo
include ./$(DEPDIR)/libgaim_la-connection.Plo
include ./$(DEPDIR)/libgaim_la-conversation.Plo
include ./$(DEPDIR)/libgaim_la-core.Plo
include ./$(DEPDIR)/libgaim_la-debug.Plo
include ./$(DEPDIR)/libgaim_la-eventloop.Plo
include ./$(DEPDIR)/libgaim_la-ft.Plo
include ./$(DEPDIR)/libgaim_la-imgstore.Plo
include ./$(DEPDIR)/libgaim_la-log.Plo
include ./$(DEPDIR)/libgaim_la-md5.Plo
include ./$(DEPDIR)/libgaim_la-network.Plo
include ./$(DEPDIR)/libgaim_la-notify.Plo
include ./$(DEPDIR)/libgaim_la-plugin.Plo
include ./$(DEPDIR)/libgaim_la-pluginpref.Plo
include ./$(DEPDIR)/libgaim_la-pounce.Plo
include ./$(DEPDIR)/libgaim_la-prefix.Plo
include ./$(DEPDIR)/libgaim_la-prefs.Plo
include ./$(DEPDIR)/libgaim_la-privacy.Plo
include ./$(DEPDIR)/libgaim_la-proxy.Plo
include ./$(DEPDIR)/libgaim_la-prpl.Plo
include ./$(DEPDIR)/libgaim_la-request.Plo
include ./$(DEPDIR)/libgaim_la-roomlist.Plo
include ./$(DEPDIR)/libgaim_la-server.Plo
include ./$(DEPDIR)/libgaim_la-sha.Plo
include ./$(DEPDIR)/libgaim_la-signals.Plo
include ./$(DEPDIR)/libgaim_la-sound.Plo
include ./$(DEPDIR)/libgaim_la-sslconn.Plo
include ./$(DEPDIR)/libgaim_la-status.Plo
include ./$(DEPDIR)/libgaim_la-stringref.Plo
include ./$(DEPDIR)/libgaim_la-util.Plo
include ./$(DEPDIR)/libgaim_la-value.Plo
include ./$(DEPDIR)/libgaim_la-xmlnode.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libgaim_la-account.o: account.c
	source='account.c' object='libgaim_la-account.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-account.Po' tmpdepfile='$(DEPDIR)/libgaim_la-account.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-account.o `test -f 'account.c' || echo '$(srcdir)/'`account.c

libgaim_la-account.obj: account.c
	source='account.c' object='libgaim_la-account.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-account.Po' tmpdepfile='$(DEPDIR)/libgaim_la-account.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-account.obj `cygpath -w account.c`

libgaim_la-account.lo: account.c
	source='account.c' object='libgaim_la-account.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-account.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-account.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-account.lo `test -f 'account.c' || echo '$(srcdir)/'`account.c

libgaim_la-accountopt.o: accountopt.c
	source='accountopt.c' object='libgaim_la-accountopt.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-accountopt.Po' tmpdepfile='$(DEPDIR)/libgaim_la-accountopt.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-accountopt.o `test -f 'accountopt.c' || echo '$(srcdir)/'`accountopt.c

libgaim_la-accountopt.obj: accountopt.c
	source='accountopt.c' object='libgaim_la-accountopt.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-accountopt.Po' tmpdepfile='$(DEPDIR)/libgaim_la-accountopt.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-accountopt.obj `cygpath -w accountopt.c`

libgaim_la-accountopt.lo: accountopt.c
	source='accountopt.c' object='libgaim_la-accountopt.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-accountopt.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-accountopt.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-accountopt.lo `test -f 'accountopt.c' || echo '$(srcdir)/'`accountopt.c

libgaim_la-blist.o: blist.c
	source='blist.c' object='libgaim_la-blist.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-blist.Po' tmpdepfile='$(DEPDIR)/libgaim_la-blist.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-blist.o `test -f 'blist.c' || echo '$(srcdir)/'`blist.c

libgaim_la-blist.obj: blist.c
	source='blist.c' object='libgaim_la-blist.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-blist.Po' tmpdepfile='$(DEPDIR)/libgaim_la-blist.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-blist.obj `cygpath -w blist.c`

libgaim_la-blist.lo: blist.c
	source='blist.c' object='libgaim_la-blist.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-blist.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-blist.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-blist.lo `test -f 'blist.c' || echo '$(srcdir)/'`blist.c

libgaim_la-buddyicon.o: buddyicon.c
	source='buddyicon.c' object='libgaim_la-buddyicon.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-buddyicon.Po' tmpdepfile='$(DEPDIR)/libgaim_la-buddyicon.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-buddyicon.o `test -f 'buddyicon.c' || echo '$(srcdir)/'`buddyicon.c

libgaim_la-buddyicon.obj: buddyicon.c
	source='buddyicon.c' object='libgaim_la-buddyicon.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-buddyicon.Po' tmpdepfile='$(DEPDIR)/libgaim_la-buddyicon.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-buddyicon.obj `cygpath -w buddyicon.c`

libgaim_la-buddyicon.lo: buddyicon.c
	source='buddyicon.c' object='libgaim_la-buddyicon.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-buddyicon.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-buddyicon.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-buddyicon.lo `test -f 'buddyicon.c' || echo '$(srcdir)/'`buddyicon.c

libgaim_la-cmds.o: cmds.c
	source='cmds.c' object='libgaim_la-cmds.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-cmds.Po' tmpdepfile='$(DEPDIR)/libgaim_la-cmds.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-cmds.o `test -f 'cmds.c' || echo '$(srcdir)/'`cmds.c

libgaim_la-cmds.obj: cmds.c
	source='cmds.c' object='libgaim_la-cmds.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-cmds.Po' tmpdepfile='$(DEPDIR)/libgaim_la-cmds.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-cmds.obj `cygpath -w cmds.c`

libgaim_la-cmds.lo: cmds.c
	source='cmds.c' object='libgaim_la-cmds.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-cmds.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-cmds.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-cmds.lo `test -f 'cmds.c' || echo '$(srcdir)/'`cmds.c

libgaim_la-connection.o: connection.c
	source='connection.c' object='libgaim_la-connection.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-connection.Po' tmpdepfile='$(DEPDIR)/libgaim_la-connection.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-connection.o `test -f 'connection.c' || echo '$(srcdir)/'`connection.c

libgaim_la-connection.obj: connection.c
	source='connection.c' object='libgaim_la-connection.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-connection.Po' tmpdepfile='$(DEPDIR)/libgaim_la-connection.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-connection.obj `cygpath -w connection.c`

libgaim_la-connection.lo: connection.c
	source='connection.c' object='libgaim_la-connection.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-connection.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-connection.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-connection.lo `test -f 'connection.c' || echo '$(srcdir)/'`connection.c

libgaim_la-conversation.o: conversation.c
	source='conversation.c' object='libgaim_la-conversation.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-conversation.Po' tmpdepfile='$(DEPDIR)/libgaim_la-conversation.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-conversation.o `test -f 'conversation.c' || echo '$(srcdir)/'`conversation.c

libgaim_la-conversation.obj: conversation.c
	source='conversation.c' object='libgaim_la-conversation.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-conversation.Po' tmpdepfile='$(DEPDIR)/libgaim_la-conversation.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-conversation.obj `cygpath -w conversation.c`

libgaim_la-conversation.lo: conversation.c
	source='conversation.c' object='libgaim_la-conversation.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-conversation.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-conversation.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-conversation.lo `test -f 'conversation.c' || echo '$(srcdir)/'`conversation.c

libgaim_la-core.o: core.c
	source='core.c' object='libgaim_la-core.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-core.Po' tmpdepfile='$(DEPDIR)/libgaim_la-core.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-core.o `test -f 'core.c' || echo '$(srcdir)/'`core.c

libgaim_la-core.obj: core.c
	source='core.c' object='libgaim_la-core.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-core.Po' tmpdepfile='$(DEPDIR)/libgaim_la-core.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-core.obj `cygpath -w core.c`

libgaim_la-core.lo: core.c
	source='core.c' object='libgaim_la-core.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-core.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-core.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-core.lo `test -f 'core.c' || echo '$(srcdir)/'`core.c

libgaim_la-debug.o: debug.c
	source='debug.c' object='libgaim_la-debug.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-debug.Po' tmpdepfile='$(DEPDIR)/libgaim_la-debug.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

libgaim_la-debug.obj: debug.c
	source='debug.c' object='libgaim_la-debug.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-debug.Po' tmpdepfile='$(DEPDIR)/libgaim_la-debug.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-debug.obj `cygpath -w debug.c`

libgaim_la-debug.lo: debug.c
	source='debug.c' object='libgaim_la-debug.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-debug.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-debug.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

libgaim_la-eventloop.o: eventloop.c
	source='eventloop.c' object='libgaim_la-eventloop.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-eventloop.Po' tmpdepfile='$(DEPDIR)/libgaim_la-eventloop.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-eventloop.o `test -f 'eventloop.c' || echo '$(srcdir)/'`eventloop.c

libgaim_la-eventloop.obj: eventloop.c
	source='eventloop.c' object='libgaim_la-eventloop.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-eventloop.Po' tmpdepfile='$(DEPDIR)/libgaim_la-eventloop.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-eventloop.obj `cygpath -w eventloop.c`

libgaim_la-eventloop.lo: eventloop.c
	source='eventloop.c' object='libgaim_la-eventloop.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-eventloop.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-eventloop.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-eventloop.lo `test -f 'eventloop.c' || echo '$(srcdir)/'`eventloop.c

libgaim_la-ft.o: ft.c
	source='ft.c' object='libgaim_la-ft.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-ft.Po' tmpdepfile='$(DEPDIR)/libgaim_la-ft.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-ft.o `test -f 'ft.c' || echo '$(srcdir)/'`ft.c

libgaim_la-ft.obj: ft.c
	source='ft.c' object='libgaim_la-ft.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-ft.Po' tmpdepfile='$(DEPDIR)/libgaim_la-ft.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-ft.obj `cygpath -w ft.c`

libgaim_la-ft.lo: ft.c
	source='ft.c' object='libgaim_la-ft.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-ft.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-ft.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-ft.lo `test -f 'ft.c' || echo '$(srcdir)/'`ft.c

libgaim_la-imgstore.o: imgstore.c
	source='imgstore.c' object='libgaim_la-imgstore.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-imgstore.Po' tmpdepfile='$(DEPDIR)/libgaim_la-imgstore.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-imgstore.o `test -f 'imgstore.c' || echo '$(srcdir)/'`imgstore.c

libgaim_la-imgstore.obj: imgstore.c
	source='imgstore.c' object='libgaim_la-imgstore.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-imgstore.Po' tmpdepfile='$(DEPDIR)/libgaim_la-imgstore.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-imgstore.obj `cygpath -w imgstore.c`

libgaim_la-imgstore.lo: imgstore.c
	source='imgstore.c' object='libgaim_la-imgstore.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-imgstore.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-imgstore.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-imgstore.lo `test -f 'imgstore.c' || echo '$(srcdir)/'`imgstore.c

libgaim_la-log.o: log.c
	source='log.c' object='libgaim_la-log.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-log.Po' tmpdepfile='$(DEPDIR)/libgaim_la-log.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

libgaim_la-log.obj: log.c
	source='log.c' object='libgaim_la-log.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-log.Po' tmpdepfile='$(DEPDIR)/libgaim_la-log.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-log.obj `cygpath -w log.c`

libgaim_la-log.lo: log.c
	source='log.c' object='libgaim_la-log.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-log.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-log.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-log.lo `test -f 'log.c' || echo '$(srcdir)/'`log.c

libgaim_la-md5.o: md5.c
	source='md5.c' object='libgaim_la-md5.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-md5.Po' tmpdepfile='$(DEPDIR)/libgaim_la-md5.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libgaim_la-md5.obj: md5.c
	source='md5.c' object='libgaim_la-md5.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-md5.Po' tmpdepfile='$(DEPDIR)/libgaim_la-md5.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-md5.obj `cygpath -w md5.c`

libgaim_la-md5.lo: md5.c
	source='md5.c' object='libgaim_la-md5.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-md5.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-md5.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libgaim_la-network.o: network.c
	source='network.c' object='libgaim_la-network.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-network.Po' tmpdepfile='$(DEPDIR)/libgaim_la-network.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-network.o `test -f 'network.c' || echo '$(srcdir)/'`network.c

libgaim_la-network.obj: network.c
	source='network.c' object='libgaim_la-network.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-network.Po' tmpdepfile='$(DEPDIR)/libgaim_la-network.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-network.obj `cygpath -w network.c`

libgaim_la-network.lo: network.c
	source='network.c' object='libgaim_la-network.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-network.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-network.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-network.lo `test -f 'network.c' || echo '$(srcdir)/'`network.c

libgaim_la-notify.o: notify.c
	source='notify.c' object='libgaim_la-notify.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-notify.Po' tmpdepfile='$(DEPDIR)/libgaim_la-notify.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-notify.o `test -f 'notify.c' || echo '$(srcdir)/'`notify.c

libgaim_la-notify.obj: notify.c
	source='notify.c' object='libgaim_la-notify.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-notify.Po' tmpdepfile='$(DEPDIR)/libgaim_la-notify.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-notify.obj `cygpath -w notify.c`

libgaim_la-notify.lo: notify.c
	source='notify.c' object='libgaim_la-notify.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-notify.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-notify.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-notify.lo `test -f 'notify.c' || echo '$(srcdir)/'`notify.c

libgaim_la-plugin.o: plugin.c
	source='plugin.c' object='libgaim_la-plugin.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-plugin.Po' tmpdepfile='$(DEPDIR)/libgaim_la-plugin.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-plugin.o `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c

libgaim_la-plugin.obj: plugin.c
	source='plugin.c' object='libgaim_la-plugin.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-plugin.Po' tmpdepfile='$(DEPDIR)/libgaim_la-plugin.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-plugin.obj `cygpath -w plugin.c`

libgaim_la-plugin.lo: plugin.c
	source='plugin.c' object='libgaim_la-plugin.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-plugin.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-plugin.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c

libgaim_la-pluginpref.o: pluginpref.c
	source='pluginpref.c' object='libgaim_la-pluginpref.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-pluginpref.Po' tmpdepfile='$(DEPDIR)/libgaim_la-pluginpref.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-pluginpref.o `test -f 'pluginpref.c' || echo '$(srcdir)/'`pluginpref.c

libgaim_la-pluginpref.obj: pluginpref.c
	source='pluginpref.c' object='libgaim_la-pluginpref.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-pluginpref.Po' tmpdepfile='$(DEPDIR)/libgaim_la-pluginpref.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-pluginpref.obj `cygpath -w pluginpref.c`

libgaim_la-pluginpref.lo: pluginpref.c
	source='pluginpref.c' object='libgaim_la-pluginpref.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-pluginpref.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-pluginpref.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-pluginpref.lo `test -f 'pluginpref.c' || echo '$(srcdir)/'`pluginpref.c

libgaim_la-pounce.o: pounce.c
	source='pounce.c' object='libgaim_la-pounce.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-pounce.Po' tmpdepfile='$(DEPDIR)/libgaim_la-pounce.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-pounce.o `test -f 'pounce.c' || echo '$(srcdir)/'`pounce.c

libgaim_la-pounce.obj: pounce.c
	source='pounce.c' object='libgaim_la-pounce.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-pounce.Po' tmpdepfile='$(DEPDIR)/libgaim_la-pounce.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-pounce.obj `cygpath -w pounce.c`

libgaim_la-pounce.lo: pounce.c
	source='pounce.c' object='libgaim_la-pounce.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-pounce.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-pounce.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-pounce.lo `test -f 'pounce.c' || echo '$(srcdir)/'`pounce.c

libgaim_la-prefix.o: prefix.c
	source='prefix.c' object='libgaim_la-prefix.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-prefix.Po' tmpdepfile='$(DEPDIR)/libgaim_la-prefix.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prefix.o `test -f 'prefix.c' || echo '$(srcdir)/'`prefix.c

libgaim_la-prefix.obj: prefix.c
	source='prefix.c' object='libgaim_la-prefix.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-prefix.Po' tmpdepfile='$(DEPDIR)/libgaim_la-prefix.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prefix.obj `cygpath -w prefix.c`

libgaim_la-prefix.lo: prefix.c
	source='prefix.c' object='libgaim_la-prefix.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-prefix.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-prefix.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prefix.lo `test -f 'prefix.c' || echo '$(srcdir)/'`prefix.c

libgaim_la-prefs.o: prefs.c
	source='prefs.c' object='libgaim_la-prefs.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-prefs.Po' tmpdepfile='$(DEPDIR)/libgaim_la-prefs.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prefs.o `test -f 'prefs.c' || echo '$(srcdir)/'`prefs.c

libgaim_la-prefs.obj: prefs.c
	source='prefs.c' object='libgaim_la-prefs.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-prefs.Po' tmpdepfile='$(DEPDIR)/libgaim_la-prefs.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prefs.obj `cygpath -w prefs.c`

libgaim_la-prefs.lo: prefs.c
	source='prefs.c' object='libgaim_la-prefs.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-prefs.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-prefs.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prefs.lo `test -f 'prefs.c' || echo '$(srcdir)/'`prefs.c

libgaim_la-privacy.o: privacy.c
	source='privacy.c' object='libgaim_la-privacy.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-privacy.Po' tmpdepfile='$(DEPDIR)/libgaim_la-privacy.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-privacy.o `test -f 'privacy.c' || echo '$(srcdir)/'`privacy.c

libgaim_la-privacy.obj: privacy.c
	source='privacy.c' object='libgaim_la-privacy.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-privacy.Po' tmpdepfile='$(DEPDIR)/libgaim_la-privacy.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-privacy.obj `cygpath -w privacy.c`

libgaim_la-privacy.lo: privacy.c
	source='privacy.c' object='libgaim_la-privacy.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-privacy.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-privacy.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-privacy.lo `test -f 'privacy.c' || echo '$(srcdir)/'`privacy.c

libgaim_la-proxy.o: proxy.c
	source='proxy.c' object='libgaim_la-proxy.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-proxy.Po' tmpdepfile='$(DEPDIR)/libgaim_la-proxy.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-proxy.o `test -f 'proxy.c' || echo '$(srcdir)/'`proxy.c

libgaim_la-proxy.obj: proxy.c
	source='proxy.c' object='libgaim_la-proxy.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-proxy.Po' tmpdepfile='$(DEPDIR)/libgaim_la-proxy.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-proxy.obj `cygpath -w proxy.c`

libgaim_la-proxy.lo: proxy.c
	source='proxy.c' object='libgaim_la-proxy.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-proxy.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-proxy.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-proxy.lo `test -f 'proxy.c' || echo '$(srcdir)/'`proxy.c

libgaim_la-prpl.o: prpl.c
	source='prpl.c' object='libgaim_la-prpl.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-prpl.Po' tmpdepfile='$(DEPDIR)/libgaim_la-prpl.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prpl.o `test -f 'prpl.c' || echo '$(srcdir)/'`prpl.c

libgaim_la-prpl.obj: prpl.c
	source='prpl.c' object='libgaim_la-prpl.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-prpl.Po' tmpdepfile='$(DEPDIR)/libgaim_la-prpl.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prpl.obj `cygpath -w prpl.c`

libgaim_la-prpl.lo: prpl.c
	source='prpl.c' object='libgaim_la-prpl.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-prpl.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-prpl.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-prpl.lo `test -f 'prpl.c' || echo '$(srcdir)/'`prpl.c

libgaim_la-request.o: request.c
	source='request.c' object='libgaim_la-request.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-request.Po' tmpdepfile='$(DEPDIR)/libgaim_la-request.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-request.o `test -f 'request.c' || echo '$(srcdir)/'`request.c

libgaim_la-request.obj: request.c
	source='request.c' object='libgaim_la-request.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-request.Po' tmpdepfile='$(DEPDIR)/libgaim_la-request.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-request.obj `cygpath -w request.c`

libgaim_la-request.lo: request.c
	source='request.c' object='libgaim_la-request.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-request.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-request.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-request.lo `test -f 'request.c' || echo '$(srcdir)/'`request.c

libgaim_la-roomlist.o: roomlist.c
	source='roomlist.c' object='libgaim_la-roomlist.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-roomlist.Po' tmpdepfile='$(DEPDIR)/libgaim_la-roomlist.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-roomlist.o `test -f 'roomlist.c' || echo '$(srcdir)/'`roomlist.c

libgaim_la-roomlist.obj: roomlist.c
	source='roomlist.c' object='libgaim_la-roomlist.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-roomlist.Po' tmpdepfile='$(DEPDIR)/libgaim_la-roomlist.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-roomlist.obj `cygpath -w roomlist.c`

libgaim_la-roomlist.lo: roomlist.c
	source='roomlist.c' object='libgaim_la-roomlist.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-roomlist.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-roomlist.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-roomlist.lo `test -f 'roomlist.c' || echo '$(srcdir)/'`roomlist.c

libgaim_la-server.o: server.c
	source='server.c' object='libgaim_la-server.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-server.Po' tmpdepfile='$(DEPDIR)/libgaim_la-server.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-server.o `test -f 'server.c' || echo '$(srcdir)/'`server.c

libgaim_la-server.obj: server.c
	source='server.c' object='libgaim_la-server.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-server.Po' tmpdepfile='$(DEPDIR)/libgaim_la-server.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-server.obj `cygpath -w server.c`

libgaim_la-server.lo: server.c
	source='server.c' object='libgaim_la-server.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-server.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-server.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-server.lo `test -f 'server.c' || echo '$(srcdir)/'`server.c

libgaim_la-sha.o: sha.c
	source='sha.c' object='libgaim_la-sha.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-sha.Po' tmpdepfile='$(DEPDIR)/libgaim_la-sha.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sha.o `test -f 'sha.c' || echo '$(srcdir)/'`sha.c

libgaim_la-sha.obj: sha.c
	source='sha.c' object='libgaim_la-sha.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-sha.Po' tmpdepfile='$(DEPDIR)/libgaim_la-sha.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sha.obj `cygpath -w sha.c`

libgaim_la-sha.lo: sha.c
	source='sha.c' object='libgaim_la-sha.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-sha.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-sha.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sha.lo `test -f 'sha.c' || echo '$(srcdir)/'`sha.c

libgaim_la-signals.o: signals.c
	source='signals.c' object='libgaim_la-signals.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-signals.Po' tmpdepfile='$(DEPDIR)/libgaim_la-signals.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-signals.o `test -f 'signals.c' || echo '$(srcdir)/'`signals.c

libgaim_la-signals.obj: signals.c
	source='signals.c' object='libgaim_la-signals.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-signals.Po' tmpdepfile='$(DEPDIR)/libgaim_la-signals.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-signals.obj `cygpath -w signals.c`

libgaim_la-signals.lo: signals.c
	source='signals.c' object='libgaim_la-signals.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-signals.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-signals.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-signals.lo `test -f 'signals.c' || echo '$(srcdir)/'`signals.c

libgaim_la-status.o: status.c
	source='status.c' object='libgaim_la-status.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-status.Po' tmpdepfile='$(DEPDIR)/libgaim_la-status.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-status.o `test -f 'status.c' || echo '$(srcdir)/'`status.c

libgaim_la-status.obj: status.c
	source='status.c' object='libgaim_la-status.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-status.Po' tmpdepfile='$(DEPDIR)/libgaim_la-status.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-status.obj `cygpath -w status.c`

libgaim_la-status.lo: status.c
	source='status.c' object='libgaim_la-status.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-status.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-status.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-status.lo `test -f 'status.c' || echo '$(srcdir)/'`status.c

libgaim_la-stringref.o: stringref.c
	source='stringref.c' object='libgaim_la-stringref.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-stringref.Po' tmpdepfile='$(DEPDIR)/libgaim_la-stringref.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-stringref.o `test -f 'stringref.c' || echo '$(srcdir)/'`stringref.c

libgaim_la-stringref.obj: stringref.c
	source='stringref.c' object='libgaim_la-stringref.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-stringref.Po' tmpdepfile='$(DEPDIR)/libgaim_la-stringref.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-stringref.obj `cygpath -w stringref.c`

libgaim_la-stringref.lo: stringref.c
	source='stringref.c' object='libgaim_la-stringref.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-stringref.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-stringref.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-stringref.lo `test -f 'stringref.c' || echo '$(srcdir)/'`stringref.c

libgaim_la-sound.o: sound.c
	source='sound.c' object='libgaim_la-sound.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-sound.Po' tmpdepfile='$(DEPDIR)/libgaim_la-sound.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c

libgaim_la-sound.obj: sound.c
	source='sound.c' object='libgaim_la-sound.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-sound.Po' tmpdepfile='$(DEPDIR)/libgaim_la-sound.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sound.obj `cygpath -w sound.c`

libgaim_la-sound.lo: sound.c
	source='sound.c' object='libgaim_la-sound.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-sound.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-sound.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sound.lo `test -f 'sound.c' || echo '$(srcdir)/'`sound.c

libgaim_la-sslconn.o: sslconn.c
	source='sslconn.c' object='libgaim_la-sslconn.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-sslconn.Po' tmpdepfile='$(DEPDIR)/libgaim_la-sslconn.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sslconn.o `test -f 'sslconn.c' || echo '$(srcdir)/'`sslconn.c

libgaim_la-sslconn.obj: sslconn.c
	source='sslconn.c' object='libgaim_la-sslconn.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-sslconn.Po' tmpdepfile='$(DEPDIR)/libgaim_la-sslconn.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sslconn.obj `cygpath -w sslconn.c`

libgaim_la-sslconn.lo: sslconn.c
	source='sslconn.c' object='libgaim_la-sslconn.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-sslconn.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-sslconn.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-sslconn.lo `test -f 'sslconn.c' || echo '$(srcdir)/'`sslconn.c

libgaim_la-util.o: util.c
	source='util.c' object='libgaim_la-util.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-util.Po' tmpdepfile='$(DEPDIR)/libgaim_la-util.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

libgaim_la-util.obj: util.c
	source='util.c' object='libgaim_la-util.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-util.Po' tmpdepfile='$(DEPDIR)/libgaim_la-util.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-util.obj `cygpath -w util.c`

libgaim_la-util.lo: util.c
	source='util.c' object='libgaim_la-util.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-util.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-util.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libgaim_la-value.o: value.c
	source='value.c' object='libgaim_la-value.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-value.Po' tmpdepfile='$(DEPDIR)/libgaim_la-value.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-value.o `test -f 'value.c' || echo '$(srcdir)/'`value.c

libgaim_la-value.obj: value.c
	source='value.c' object='libgaim_la-value.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-value.Po' tmpdepfile='$(DEPDIR)/libgaim_la-value.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-value.obj `cygpath -w value.c`

libgaim_la-value.lo: value.c
	source='value.c' object='libgaim_la-value.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-value.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-value.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-value.lo `test -f 'value.c' || echo '$(srcdir)/'`value.c

libgaim_la-xmlnode.o: xmlnode.c
	source='xmlnode.c' object='libgaim_la-xmlnode.o' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-xmlnode.Po' tmpdepfile='$(DEPDIR)/libgaim_la-xmlnode.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-xmlnode.o `test -f 'xmlnode.c' || echo '$(srcdir)/'`xmlnode.c

libgaim_la-xmlnode.obj: xmlnode.c
	source='xmlnode.c' object='libgaim_la-xmlnode.obj' libtool=no \
	depfile='$(DEPDIR)/libgaim_la-xmlnode.Po' tmpdepfile='$(DEPDIR)/libgaim_la-xmlnode.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-xmlnode.obj `cygpath -w xmlnode.c`

libgaim_la-xmlnode.lo: xmlnode.c
	source='xmlnode.c' object='libgaim_la-xmlnode.lo' libtool=yes \
	depfile='$(DEPDIR)/libgaim_la-xmlnode.Plo' tmpdepfile='$(DEPDIR)/libgaim_la-xmlnode.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgaim_la_CFLAGS) $(CFLAGS) -c -o libgaim_la-xmlnode.lo `test -f 'xmlnode.c' || echo '$(srcdir)/'`xmlnode.c
CCDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-bcheck  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 2
KDE_DIST=cmds.h internal.h signals.h log.c imgstore.h prefix.c sound.c prefs.h request.h account.h connection.h buddyicon.h pluginpref.h plugin.h eventloop.c stringref.c account.c notify.c account.loT value.h prpl.c buddyicon.c ft.c value.c util.c imgstore.c libgaim_la-account.loT core.c log.h proxy.h blist.c pounce.h md5.c network.c accountopt.h sslconn.h pluginpref.c proxy.c network.h privacy.h xmlnode.h eventloop.h sound.h sha.c pounce.c util.h accountopt.c stringref.h prefs.c cmds.c roomlist.h connection.c notify.h debug.h conversation.c request.c sha.h away.h core.h roomlist.c plugin.c xmlnode.c server.h prpl.h conversation.h md5.h debug.c signals.c status.h status.c version.h blist.h ft.h server.c sslconn.c privacy.c prefix.h 

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libgaim/Makefile
	cd $(top_srcdir) && perl admin/am_edit libgaim/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXX) $(DEFS) -I. -I$(srcdir) -I$(top_builddir) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 3
final:
	$(MAKE) all-am

#>+ 3
final-install:
	$(MAKE) install-am

#>+ 3
no-final:
	$(MAKE) all-am

#>+ 3
no-final-install:
	$(MAKE) install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 3
nmcheck: 
nmcheck-am: nmcheck
